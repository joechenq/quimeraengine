// QuimeraEngineTestApp.cpp : Defines the entry point for the application.
//

//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|							 |			   ##################
//##################		    |	  #include headers.		 |			   ##################
//##################		   /|							 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################
#include "QBoolean.h"
#include "QTriangle2D.h"
#include "QVector2.h"

//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|							 |			   ##################
//##################		    |	  using namespaces.		 |			   ##################
//##################		   /|							 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################
using namespace Kinesis::QuimeraEngine::Tools::DataTypes;
using namespace Kinesis::QuimeraEngine::Tools::Math;

//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|	 #define preprocessor	 |			   ##################
//##################		    |		 instructions.		 |			   ##################
//##################		   /|							 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################


//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|							 |			   ##################
//##################		    |	  Global variables.		 |			   ##################
//##################		   /|							 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################


//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|	Forward declarations of	 |			   ##################
//##################		    |	 functions included in	 |			   ##################
//##################		   /|		 this module.		 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################


int main()
{
    QTriangle2D T(QVector2(QFloat::_0, QFloat::_1), QVector2(QFloat::_1, QFloat::_0), QVector2(QFloat::_0, QFloat::_0));

    bool prueba = true;

    string_q verdadero = QBoolean::ToString(prueba);

    prueba = false;

    string_q falso = QBoolean::ToString(prueba);

    string_q triangulo = T.ToString();

    return 0;
}
