// QuimeraEngineTestApp.cpp : Defines the entry point for the application.
//

//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|							 |			   ##################
//##################		    |	  #include headers.		 |			   ##################
//##################		   /|							 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################
#include "QVector3.h"
#include "QRay3D.h"
#include "QTransformationMatrix.h"

//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|							 |			   ##################
//##################		    |	  using namespaces.		 |			   ##################
//##################		   /|							 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################
using namespace Kinesis::QuimeraEngine::Tools::Math;

//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|	 #define preprocessor	 |			   ##################
//##################		    |		 instructions.		 |			   ##################
//##################		   /|							 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################


//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|							 |			   ##################
//##################		    |	  Global variables.		 |			   ##################
//##################		   /|							 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################


//##################=======================================================##################
//##################			 ____________________________			   ##################
//##################			|	Forward declarations of	 |			   ##################
//##################		    |	 functions included in	 |			   ##################
//##################		   /|		 this module.		 |\			   ##################
//##################			 \/\/\/\/\/\/\/\/\/\/\/\/\/\/			   ##################
//##################													   ##################
//##################=======================================================##################


int main()
{
    QRay3D<QVector3> ray;
    ray.Translate(0, 0, 0);
    QTransformationMatrix<QMatrix4x4> matrix;
    ray.Transform(matrix);
    return 0;
}
