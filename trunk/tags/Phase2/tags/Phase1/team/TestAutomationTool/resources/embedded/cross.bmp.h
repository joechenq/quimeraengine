#ifndef CROSS_BMP_H
#define CROSS_BMP_H

#include <wx/mstream.h>
#include <wx/image.h>
#include <wx/bitmap.h>

static const unsigned char cross_bmp[] = 
{
	0x42, 0x4D, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x36, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x08, 0x00, 
	0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xC2, 0x00, 0x00, 0x00, 0x12, 0x0B, 
	0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xEE, 0xEF, 0xF7, 
	0xA5, 0xA8, 0xD6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAA, 
	0xAD, 0xD9, 0xDF, 0xE1, 0xF1, 0xFF, 0xFF, 0xFF, 0xED, 0xEE, 
	0xF8, 0x3F, 0x47, 0xB4, 0x00, 0x00, 0x92, 0x74, 0x7B, 0xC7, 
	0x8C, 0x91, 0xCE, 0x00, 0x00, 0x94, 0x2A, 0x32, 0xAC, 0xE0, 
	0xE2, 0xF4, 0xDC, 0xDE, 0xF4, 0x1C, 0x26, 0xB8, 0x0E, 0x1A, 
	0xB6, 0x00, 0x06, 0xAA, 0x00, 0x06, 0xA6, 0x00, 0x0E, 0xB3, 
	0x00, 0x00, 0xA5, 0xBA, 0xBB, 0xE4, 0xFF, 0xFF, 0xFF, 0xA4, 
	0xA9, 0xF2, 0x34, 0x40, 0xCD, 0x26, 0x33, 0xC8, 0x08, 0x17, 
	0xC1, 0x00, 0x05, 0xBA, 0x65, 0x66, 0xCB, 0xFA, 0xF9, 0xFB, 
	0xFC, 0xFC, 0xFF, 0xA1, 0xA5, 0xE7, 0x2A, 0x36, 0xCD, 0x34, 
	0x41, 0xD7, 0x31, 0x3D, 0xD6, 0x09, 0x14, 0xC5, 0x6F, 0x75, 
	0xD9, 0xF9, 0xFA, 0xFF, 0xDC, 0xDE, 0xF8, 0x18, 0x25, 0xD5, 
	0x1D, 0x2B, 0xDC, 0x22, 0x30, 0xDE, 0x31, 0x3E, 0xE2, 0x33, 
	0x40, 0xE0, 0x00, 0x0A, 0xCF, 0xBB, 0xBE, 0xF2, 0xFB, 0xFB, 
	0xFE, 0x7B, 0x81, 0xEE, 0x03, 0x11, 0xE1, 0x72, 0x7D, 0xF2, 
	0x9C, 0xA3, 0xF6, 0x21, 0x2D, 0xE4, 0x68, 0x6C, 0xE2, 0xF1, 
	0xF1, 0xF9, 0xFF, 0xFF, 0xFF, 0xFD, 0xFD, 0xFF, 0xB1, 0xB4, 
	0xF2, 0xFA, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xB2, 0xB5, 0xF2, 
	0xF4, 0xF4, 0xFC, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 
};

wxBitmap& cross_bmp_to_wx_bitmap()
{
	static wxMemoryInputStream memIStream( cross_bmp, sizeof( cross_bmp ) );
	static wxImage image( memIStream, wxBITMAP_TYPE_BMP );
	static wxBitmap bmp( image );
	return bmp;
};


#endif //CROSS_BMP_H
